ame: CI

on: [push]

jobs:
  test:

    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        platform: [ubuntu-latest, windows-latest, macos-latest]
        python-version: ["3.7", "3.8", "3.9", "3.10"]

    steps:
    - uses: actions/checkout@v2
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install Linux libraries
      if: runner.os == 'Linux'
      run: |
        sudo apt-get install -y libdbus-1-3 libxkbcommon-x11-0 libxcb-icccm4 \
          libxcb-image0 libxcb-keysyms1 libxcb-randr0 libxcb-render-util0 \
          libxcb-xinerama0 libxcb-xinput0 libxcb-xfixes0

    - name: Install Windows OpenGL
      if: runner.os == 'Windows'
      run: |
        git clone --depth 1 git://github.com/pyvista/gl-ci-helpers.git
        powershell gl-ci-helpers/appveyor/install_opengl.ps1

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        python -m pip install nox poetry

    # - name: Lint with nox
    #   run: |
    #     nox --sessions=lint --python=${{ matrix.python-version }}

    - name: Test with nox
      run: |
        nox --sessions=tests --python=${{ matrix.python-version }}

    - name: Coverage
      uses: codecov/codecov-action@v2

  deploy:
    needs: [test]
    runs-on: ubuntu-latest
    steps:
      - name: Build and bump version
        run: |
            poetry build &&
            poetry version patch &&
            version=$(poetry version | awk '{ print $2 }') &&
            poetry version $version.dev.$(date +%s)
      - name: Release on TestPyPI
        uses: pypa/gh-action-pypi-publish@v1.4.2
        with:
          user: __token__
          password: ${{ secrets.TEST_PYPI_TOKEN }}
          repository_url: https://test.pypi.org/legacy/
